{"ast":null,"code":"var _jsxFileName = \"/Users/amber/Desktop/UdemyReact/react-router-practice/src/pages/QuoteDetail.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useParams, Route, Link, useRouteMatch } from \"react-router-dom\";\nimport { Fragment } from \"react\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\nimport useHttp from \"../hooks/use-http\";\nimport { getSingleQuote } from \"../lib/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuoteDetail = () => {\n  _s();\n\n  const match = useRouteMatch();\n  const params = useParams();\n  const {\n    sendRequest,\n    status,\n    data: loadedQuote,\n    error\n  } = useHttp(getSingleQuote, true);\n  useEffect(() => {\n    sendRequest;\n  }, [sendRequest]);\n\n  if (!quote) {\n    return /*#__PURE__*/_jsxDEV(NoQuotesFound, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Quote\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: quote.text,\n      author: quote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: match.path,\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn--flat\",\n          to: `${match.url}/comments`,\n          children: \"Load Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteDetail, \"t1PEK/87Yc+8MsV+4xcPsAzOxOA=\", false, function () {\n  return [useRouteMatch, useParams, useHttp];\n});\n\n_c = QuoteDetail;\nexport default QuoteDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetail\");","map":{"version":3,"sources":["/Users/amber/Desktop/UdemyReact/react-router-practice/src/pages/QuoteDetail.js"],"names":["useEffect","useParams","Route","Link","useRouteMatch","Fragment","Comments","HighlightedQuote","NoQuotesFound","useHttp","getSingleQuote","QuoteDetail","match","params","sendRequest","status","data","loadedQuote","error","quote","text","author","path","url"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,SAAT,EAAoBC,KAApB,EAA2BC,IAA3B,EAAiCC,aAAjC,QAAsD,kBAAtD;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,gBAAP,MAA6B,uCAA7B;AACA,OAAOC,aAAP,MAA0B,oCAA1B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,cAAT,QAA+B,YAA/B;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAMC,KAAK,GAAGR,aAAa,EAA3B;AACA,QAAMS,MAAM,GAAGZ,SAAS,EAAxB;AACA,QAAM;AACJa,IAAAA,WADI;AAEJC,IAAAA,MAFI;AAGJC,IAAAA,IAAI,EAAEC,WAHF;AAIJC,IAAAA;AAJI,MAKFT,OAAO,CAACC,cAAD,EAAiB,IAAjB,CALX;AAOAV,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,WAAW;AACZ,GAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;;AAIA,MAAI,CAACK,KAAL,EAAY;AACV,wBAAO,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,sBACE,QAAC,QAAD;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,gBAAD;AAAkB,MAAA,IAAI,EAAEA,KAAK,CAACC,IAA9B;AAAoC,MAAA,MAAM,EAAED,KAAK,CAACE;AAAlD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAET,KAAK,CAACU,IAAnB;AAAyB,MAAA,KAAK,MAA9B;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,WAAhB;AAA4B,UAAA,EAAE,EAAG,GAAEV,KAAK,CAACW,GAAI,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHF,eAWE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEX,KAAK,CAACU,IAAK,WAA3B;AAAA,6BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAlCD;;GAAMX,W;UACUP,a,EACCH,S,EAMXQ,O;;;KARAE,W;AAoCN,eAAeA,WAAf","sourcesContent":["import { useEffect } from \"react\";\nimport { useParams, Route, Link, useRouteMatch } from \"react-router-dom\";\nimport { Fragment } from \"react\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\nimport useHttp from \"../hooks/use-http\";\nimport { getSingleQuote } from \"../lib/api\";\n\nconst QuoteDetail = () => {\n  const match = useRouteMatch();\n  const params = useParams();\n  const {\n    sendRequest,\n    status,\n    data: loadedQuote,\n    error,\n  } = useHttp(getSingleQuote, true);\n\n  useEffect(() => {\n    sendRequest;\n  }, [sendRequest]);\n\n  if (!quote) {\n    return <NoQuotesFound />;\n  }\n  return (\n    <Fragment>\n      <h1>Quote</h1>\n      <HighlightedQuote text={quote.text} author={quote.author} />\n      <Route path={match.path} exact>\n        <div className=\"centered\">\n          <Link className=\"btn--flat\" to={`${match.url}/comments`}>\n            Load Comments\n          </Link>\n        </div>\n      </Route>\n\n      <Route path={`${match.path}/comments`}>\n        <Comments />\n      </Route>\n    </Fragment>\n  );\n};\n\nexport default QuoteDetail;\n"]},"metadata":{},"sourceType":"module"}